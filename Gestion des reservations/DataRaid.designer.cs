#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gestion_des_reservations
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Riad")]
	public partial class DataRaidDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertRegion(Region instance);
    partial void UpdateRegion(Region instance);
    partial void DeleteRegion(Region instance);
    partial void InsertReservation(Reservation instance);
    partial void UpdateReservation(Reservation instance);
    partial void DeleteReservation(Reservation instance);
    partial void InsertRiad(Riad instance);
    partial void UpdateRiad(Riad instance);
    partial void DeleteRiad(Riad instance);
    partial void InsertTypeHebergement(TypeHebergement instance);
    partial void UpdateTypeHebergement(TypeHebergement instance);
    partial void DeleteTypeHebergement(TypeHebergement instance);
    #endregion
		
		public DataRaidDataContext() : 
				base(global::Gestion_des_reservations.Properties.Settings.Default.RiadConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataRaidDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataRaidDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataRaidDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataRaidDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<Negocier> Negociers
		{
			get
			{
				return this.GetTable<Negocier>();
			}
		}
		
		public System.Data.Linq.Table<Region> Regions
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<Reservation> Reservations
		{
			get
			{
				return this.GetTable<Reservation>();
			}
		}
		
		public System.Data.Linq.Table<Riad> Riads
		{
			get
			{
				return this.GetTable<Riad>();
			}
		}
		
		public System.Data.Linq.Table<TypeHebergement> TypeHebergements
		{
			get
			{
				return this.GetTable<TypeHebergement>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodeClient;
		
		private string _Nom;
		
		private string _Prenom;
		
		private string _GSM;
		
		private string _Mail;
		
		private string _Adresse;
		
		private string _Pays;
		
		private EntitySet<Reservation> _Reservations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeClientChanging(int value);
    partial void OnCodeClientChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnGSMChanging(string value);
    partial void OnGSMChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OnPaysChanging(string value);
    partial void OnPaysChanged();
    #endregion
		
		public Client()
		{
			this._Reservations = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations), new Action<Reservation>(this.detach_Reservations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeClient", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodeClient
		{
			get
			{
				return this._CodeClient;
			}
			set
			{
				if ((this._CodeClient != value))
				{
					this.OnCodeClientChanging(value);
					this.SendPropertyChanging();
					this._CodeClient = value;
					this.SendPropertyChanged("CodeClient");
					this.OnCodeClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSM", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GSM
		{
			get
			{
				return this._GSM;
			}
			set
			{
				if ((this._GSM != value))
				{
					this.OnGSMChanging(value);
					this.SendPropertyChanging();
					this._GSM = value;
					this.SendPropertyChanged("GSM");
					this.OnGSMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pays", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Pays
		{
			get
			{
				return this._Pays;
			}
			set
			{
				if ((this._Pays != value))
				{
					this.OnPaysChanging(value);
					this.SendPropertyChanging();
					this._Pays = value;
					this.SendPropertyChanged("Pays");
					this.OnPaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Reservation", Storage="_Reservations", ThisKey="CodeClient", OtherKey="CodeClient")]
		public EntitySet<Reservation> Reservations
		{
			get
			{
				return this._Reservations;
			}
			set
			{
				this._Reservations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Negocier")]
	public partial class Negocier
	{
		
		private int _NumeroR;
		
		private int _NumeroType;
		
		private int _CodeClient;
		
		private System.DateTime _DateNego;
		
		private double _Prix_Nuite;
		
		public Negocier()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroR", DbType="Int NOT NULL")]
		public int NumeroR
		{
			get
			{
				return this._NumeroR;
			}
			set
			{
				if ((this._NumeroR != value))
				{
					this._NumeroR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroType", DbType="Int NOT NULL")]
		public int NumeroType
		{
			get
			{
				return this._NumeroType;
			}
			set
			{
				if ((this._NumeroType != value))
				{
					this._NumeroType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeClient", DbType="Int NOT NULL")]
		public int CodeClient
		{
			get
			{
				return this._CodeClient;
			}
			set
			{
				if ((this._CodeClient != value))
				{
					this._CodeClient = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateNego", DbType="Date NOT NULL")]
		public System.DateTime DateNego
		{
			get
			{
				return this._DateNego;
			}
			set
			{
				if ((this._DateNego != value))
				{
					this._DateNego = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prix_Nuite", DbType="Float NOT NULL")]
		public double Prix_Nuite
		{
			get
			{
				return this._Prix_Nuite;
			}
			set
			{
				if ((this._Prix_Nuite != value))
				{
					this._Prix_Nuite = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Region")]
	public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodeRegion;
		
		private string _LibelleRegion;
		
		private EntitySet<Riad> _Riads;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeRegionChanging(string value);
    partial void OnCodeRegionChanged();
    partial void OnLibelleRegionChanging(string value);
    partial void OnLibelleRegionChanged();
    #endregion
		
		public Region()
		{
			this._Riads = new EntitySet<Riad>(new Action<Riad>(this.attach_Riads), new Action<Riad>(this.detach_Riads));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeRegion", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeRegion
		{
			get
			{
				return this._CodeRegion;
			}
			set
			{
				if ((this._CodeRegion != value))
				{
					this.OnCodeRegionChanging(value);
					this.SendPropertyChanging();
					this._CodeRegion = value;
					this.SendPropertyChanged("CodeRegion");
					this.OnCodeRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibelleRegion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LibelleRegion
		{
			get
			{
				return this._LibelleRegion;
			}
			set
			{
				if ((this._LibelleRegion != value))
				{
					this.OnLibelleRegionChanging(value);
					this.SendPropertyChanging();
					this._LibelleRegion = value;
					this.SendPropertyChanged("LibelleRegion");
					this.OnLibelleRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Riad", Storage="_Riads", ThisKey="CodeRegion", OtherKey="CodeReg")]
		public EntitySet<Riad> Riads
		{
			get
			{
				return this._Riads;
			}
			set
			{
				this._Riads.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Riads(Riad entity)
		{
			this.SendPropertyChanging();
			entity.Region = this;
		}
		
		private void detach_Riads(Riad entity)
		{
			this.SendPropertyChanging();
			entity.Region = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reservation")]
	public partial class Reservation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NumRes;
		
		private int _NumeroType;
		
		private int _CodeClient;
		
		private System.DateTime _DateDebut;
		
		private System.DateTime _DateFin;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<TypeHebergement> _TypeHebergement;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumResChanging(int value);
    partial void OnNumResChanged();
    partial void OnNumeroTypeChanging(int value);
    partial void OnNumeroTypeChanged();
    partial void OnCodeClientChanging(int value);
    partial void OnCodeClientChanged();
    partial void OnDateDebutChanging(System.DateTime value);
    partial void OnDateDebutChanged();
    partial void OnDateFinChanging(System.DateTime value);
    partial void OnDateFinChanged();
    #endregion
		
		public Reservation()
		{
			this._Client = default(EntityRef<Client>);
			this._TypeHebergement = default(EntityRef<TypeHebergement>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumRes", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NumRes
		{
			get
			{
				return this._NumRes;
			}
			set
			{
				if ((this._NumRes != value))
				{
					this.OnNumResChanging(value);
					this.SendPropertyChanging();
					this._NumRes = value;
					this.SendPropertyChanged("NumRes");
					this.OnNumResChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroType", DbType="Int NOT NULL")]
		public int NumeroType
		{
			get
			{
				return this._NumeroType;
			}
			set
			{
				if ((this._NumeroType != value))
				{
					if (this._TypeHebergement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumeroTypeChanging(value);
					this.SendPropertyChanging();
					this._NumeroType = value;
					this.SendPropertyChanged("NumeroType");
					this.OnNumeroTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeClient", DbType="Int NOT NULL")]
		public int CodeClient
		{
			get
			{
				return this._CodeClient;
			}
			set
			{
				if ((this._CodeClient != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeClientChanging(value);
					this.SendPropertyChanging();
					this._CodeClient = value;
					this.SendPropertyChanged("CodeClient");
					this.OnCodeClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDebut", DbType="Date NOT NULL")]
		public System.DateTime DateDebut
		{
			get
			{
				return this._DateDebut;
			}
			set
			{
				if ((this._DateDebut != value))
				{
					this.OnDateDebutChanging(value);
					this.SendPropertyChanging();
					this._DateDebut = value;
					this.SendPropertyChanged("DateDebut");
					this.OnDateDebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFin", DbType="Date NOT NULL")]
		public System.DateTime DateFin
		{
			get
			{
				return this._DateFin;
			}
			set
			{
				if ((this._DateFin != value))
				{
					this.OnDateFinChanging(value);
					this.SendPropertyChanging();
					this._DateFin = value;
					this.SendPropertyChanged("DateFin");
					this.OnDateFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Reservation", Storage="_Client", ThisKey="CodeClient", OtherKey="CodeClient", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Reservations.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Reservations.Add(this);
						this._CodeClient = value.CodeClient;
					}
					else
					{
						this._CodeClient = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeHebergement_Reservation", Storage="_TypeHebergement", ThisKey="NumeroType", OtherKey="NumeroType", IsForeignKey=true)]
		public TypeHebergement TypeHebergement
		{
			get
			{
				return this._TypeHebergement.Entity;
			}
			set
			{
				TypeHebergement previousValue = this._TypeHebergement.Entity;
				if (((previousValue != value) 
							|| (this._TypeHebergement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeHebergement.Entity = null;
						previousValue.Reservations.Remove(this);
					}
					this._TypeHebergement.Entity = value;
					if ((value != null))
					{
						value.Reservations.Add(this);
						this._NumeroType = value.NumeroType;
					}
					else
					{
						this._NumeroType = default(int);
					}
					this.SendPropertyChanged("TypeHebergement");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Riad")]
	public partial class Riad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NumeroR;
		
		private string _NomR;
		
		private string _AdresseRueR;
		
		private string _CodePostaleR;
		
		private string _VilleR;
		
		private string _TelephoneR;
		
		private string _NomContactR;
		
		private string _CodeReg;
		
		private int _NombreDePlaces;
		
		private EntityRef<Region> _Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumeroRChanging(int value);
    partial void OnNumeroRChanged();
    partial void OnNomRChanging(string value);
    partial void OnNomRChanged();
    partial void OnAdresseRueRChanging(string value);
    partial void OnAdresseRueRChanged();
    partial void OnCodePostaleRChanging(string value);
    partial void OnCodePostaleRChanged();
    partial void OnVilleRChanging(string value);
    partial void OnVilleRChanged();
    partial void OnTelephoneRChanging(string value);
    partial void OnTelephoneRChanged();
    partial void OnNomContactRChanging(string value);
    partial void OnNomContactRChanged();
    partial void OnCodeRegChanging(string value);
    partial void OnCodeRegChanged();
    partial void OnNombreDePlacesChanging(int value);
    partial void OnNombreDePlacesChanged();
    #endregion
		
		public Riad()
		{
			this._Region = default(EntityRef<Region>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroR", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NumeroR
		{
			get
			{
				return this._NumeroR;
			}
			set
			{
				if ((this._NumeroR != value))
				{
					this.OnNumeroRChanging(value);
					this.SendPropertyChanging();
					this._NumeroR = value;
					this.SendPropertyChanged("NumeroR");
					this.OnNumeroRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomR", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NomR
		{
			get
			{
				return this._NomR;
			}
			set
			{
				if ((this._NomR != value))
				{
					this.OnNomRChanging(value);
					this.SendPropertyChanging();
					this._NomR = value;
					this.SendPropertyChanged("NomR");
					this.OnNomRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdresseRueR", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AdresseRueR
		{
			get
			{
				return this._AdresseRueR;
			}
			set
			{
				if ((this._AdresseRueR != value))
				{
					this.OnAdresseRueRChanging(value);
					this.SendPropertyChanging();
					this._AdresseRueR = value;
					this.SendPropertyChanged("AdresseRueR");
					this.OnAdresseRueRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodePostaleR", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CodePostaleR
		{
			get
			{
				return this._CodePostaleR;
			}
			set
			{
				if ((this._CodePostaleR != value))
				{
					this.OnCodePostaleRChanging(value);
					this.SendPropertyChanging();
					this._CodePostaleR = value;
					this.SendPropertyChanged("CodePostaleR");
					this.OnCodePostaleRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VilleR", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VilleR
		{
			get
			{
				return this._VilleR;
			}
			set
			{
				if ((this._VilleR != value))
				{
					this.OnVilleRChanging(value);
					this.SendPropertyChanging();
					this._VilleR = value;
					this.SendPropertyChanged("VilleR");
					this.OnVilleRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneR", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TelephoneR
		{
			get
			{
				return this._TelephoneR;
			}
			set
			{
				if ((this._TelephoneR != value))
				{
					this.OnTelephoneRChanging(value);
					this.SendPropertyChanging();
					this._TelephoneR = value;
					this.SendPropertyChanged("TelephoneR");
					this.OnTelephoneRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomContactR", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NomContactR
		{
			get
			{
				return this._NomContactR;
			}
			set
			{
				if ((this._NomContactR != value))
				{
					this.OnNomContactRChanging(value);
					this.SendPropertyChanging();
					this._NomContactR = value;
					this.SendPropertyChanged("NomContactR");
					this.OnNomContactRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeReg", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CodeReg
		{
			get
			{
				return this._CodeReg;
			}
			set
			{
				if ((this._CodeReg != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeRegChanging(value);
					this.SendPropertyChanging();
					this._CodeReg = value;
					this.SendPropertyChanged("CodeReg");
					this.OnCodeRegChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreDePlaces", DbType="Int NOT NULL")]
		public int NombreDePlaces
		{
			get
			{
				return this._NombreDePlaces;
			}
			set
			{
				if ((this._NombreDePlaces != value))
				{
					this.OnNombreDePlacesChanging(value);
					this.SendPropertyChanging();
					this._NombreDePlaces = value;
					this.SendPropertyChanged("NombreDePlaces");
					this.OnNombreDePlacesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Riad", Storage="_Region", ThisKey="CodeReg", OtherKey="CodeRegion", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				Region previousValue = this._Region.Entity;
				if (((previousValue != value) 
							|| (this._Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region.Entity = null;
						previousValue.Riads.Remove(this);
					}
					this._Region.Entity = value;
					if ((value != null))
					{
						value.Riads.Add(this);
						this._CodeReg = value.CodeRegion;
					}
					else
					{
						this._CodeReg = default(string);
					}
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeHebergement")]
	public partial class TypeHebergement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NumeroType;
		
		private string _LibelleType;
		
		private EntitySet<Reservation> _Reservations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumeroTypeChanging(int value);
    partial void OnNumeroTypeChanged();
    partial void OnLibelleTypeChanging(string value);
    partial void OnLibelleTypeChanged();
    #endregion
		
		public TypeHebergement()
		{
			this._Reservations = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservations), new Action<Reservation>(this.detach_Reservations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NumeroType
		{
			get
			{
				return this._NumeroType;
			}
			set
			{
				if ((this._NumeroType != value))
				{
					this.OnNumeroTypeChanging(value);
					this.SendPropertyChanging();
					this._NumeroType = value;
					this.SendPropertyChanged("NumeroType");
					this.OnNumeroTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LibelleType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LibelleType
		{
			get
			{
				return this._LibelleType;
			}
			set
			{
				if ((this._LibelleType != value))
				{
					this.OnLibelleTypeChanging(value);
					this.SendPropertyChanging();
					this._LibelleType = value;
					this.SendPropertyChanged("LibelleType");
					this.OnLibelleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeHebergement_Reservation", Storage="_Reservations", ThisKey="NumeroType", OtherKey="NumeroType")]
		public EntitySet<Reservation> Reservations
		{
			get
			{
				return this._Reservations;
			}
			set
			{
				this._Reservations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.TypeHebergement = this;
		}
		
		private void detach_Reservations(Reservation entity)
		{
			this.SendPropertyChanging();
			entity.TypeHebergement = null;
		}
	}
}
#pragma warning restore 1591
